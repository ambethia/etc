## Antigen

ZSHA_BASE=$HOME/.etc/antigen
source $ZSHA_BASE/antigen/antigen.zsh

antigen use oh-my-zsh

antigen bundles <<-BUNDLES
	brew
	bundler
	git
	heroku
	rails
	ruby
	ssh-agent
	tmux
	zsh-users/zsh-completions
	zsh-users/zsh-syntax-highlighting
	zsh-users/zsh-history-substring-search
BUNDLES

if [ "$OSTYPE"="darwin11.0" ]; then
  antigen-bundle osx
fi

antigen theme wedisagree

antigen apply

## Editor

export EDITOR='atom -nw'
export VISUAL='atom -nw'

## Path

PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin

export PATH="/usr/local/share/npm/bin:$PATH"

export PATH=$PATH:/opt/local/bin
export MANPATH=$MANPATH:/opt/local/share/man
export INFOPATH=$INFOPATH:/opt/local/share/info

## Ext

if [ -f ~/.aliases ]; then
	. ~/.aliases
fi

if [ -f ~/.private ]; then
  . ~/.private
fi

# brew install zsh-completions
fpath=(/usr/local/share/zsh-completions $fpath)

# Postgres equivalent to heroku db:pull.
# Pulls latest heroku pgbackups dump into local database
#
# Usage:
#
# $ heroku_pg_pull [appname] [local database name]
#
function heroku_pg_pull(){
  echo "!   WARNING: Data in the local database '$2' will be destroyed."
  echo "    Type '$2' to overwrite data in local database '$2'"
  read local_database_name\?"> "
  echo
  if [ "$local_database_name" "==" "$2" ]; then
    curl -o heroku_pg_pull_latest_backup.dump `heroku pgbackups:url -a $1`;
    pg_restore --verbose --clean --no-acl --no-owner -h localhost -U `whoami` -d $2 heroku_pg_pull_latest_backup.dump;
    rm heroku_pg_pull_latest_backup.dump;
  else
    echo "Aborted"
  fi
}

## Lang

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

## Ruby

export RBENV_ROOT=/usr/local/var/rbenv
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

## GO

export GOPATH=$HOME/.go
export PATH=$PATH:/usr/local/opt/go/libexec/bin:${GOPATH//://bin:}/bin

## Misc

source `brew --prefix`/etc/profile.d/z.sh

eval "$(direnv hook $0)"
